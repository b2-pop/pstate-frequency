# The MIT License (MIT)
#
# Copyright (c) 2016 Peter Kenji Yamanaka
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

_pstate-frequency()
{
  COMPREPLY=()
  local cur="${COMP_WORDS[COMP_CWORD]}"
  local prev="${COMP_WORDS[COMP_CWORD-1]}"
  local short_actions="-V -H -S -G -d -q"
  local long_actions="--quiet --version --help --set --get --quiet --delay"
  local short_set_options="-m -n -t -p -g -x"
  local short_get_options="-c -r"
  local long_set_options="--max --min --turbo --plan --governor --x86"
  local long_get_options="--current --real"
  local policies="powersave normal performance none"
  local governors=""
  governors="$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors)"

  local plans=""
  local prefix='??-'
  local suffix='.plan'
  local POWER_PLAN_CONFIG_DIR="/etc/pstate-frequency.d"
  for plan in "${POWER_PLAN_CONFIG_DIR}"/*.plan; do
    # Strip all the fancy stuff from the file name to just get the plan name
    stripped="${plan#$POWER_PLAN_CONFIG_DIR/}"
    stripped="${stripped#$prefix}"
    stripped="${stripped%$suffix}"
    plans="$plans ${stripped}"
  done

  if [[ ${cur} = --* ]]; then
    if [[ ${prev} = "--set" ]] || [[ ${prev} = "-S" ]]; then
      COMPREPLY=( $(compgen -W "${long_set_options}" -- "${cur}") )
    elif [[ ${prev} = "--get" ]] || [[ ${prev} = "-G" ]]; then
      COMPREPLY=( $(compgen -W "${long_get_options}" -- "${cur}") )
    elif [[ ${prev} = "--plan" ]] || [[ ${prev} = "-p" ]]; then
      COMPREPLY=( $(compgen -W "${plans}" -- "${cur}") )
    else
      COMPREPLY=( $(compgen -W "${long_actions}" -- "${cur}") )
    fi
  elif [[ ${cur} = * ]]; then
    if [[ ${prev} = "--set" ]] || [[ ${prev} = "-S" ]]; then
      COMPREPLY=( $(compgen -W "${short_set_options}" -- "${cur}") )
    elif [[ ${prev} = "--get" ]] || [[ ${prev} = "-G" ]]; then
      COMPREPLY=( $(compgen -W "${short_get_options}" -- "${cur}") )
    elif [[ ${prev} = "--plan" ]] || [[ ${prev} = "-p" ]]; then
      COMPREPLY=( $(compgen -W "${plans}" -- "${cur}") )
    elif [[ ${prev} = "--governor" ]] || [[ ${prev} = "-g" ]]; then
      COMPREPLY=( $(compgen -W "${governors}" -- "${cur}") )
    elif [[ ${prev} = "--x86" ]] || [[ ${prev} = "-x" ]]; then
      COMPREPLY=( $(compgen -W "${policies}" -- "${cur}") )
    else
      COMPREPLY=( $(compgen -W "${short_actions}" -- "${cur}") )
    fi
  fi

  unset cur
  unset prev
  unset short_actions
  unset long_actions
  unset short_set_options
  unset short_get_options
  unset long_set_options
  unset long_get_options
  unset plans
  unset policies
  unset governors
}

complete -F _pstate-frequency pstate-frequency
