#compdef pstate-frequency

# The MIT License (MIT)
#
# Copyright (c) 2016 Peter Kenji Yamanaka
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

_pstate-frequency()
{
  typeset -A opt_args
  _arguments \
    "1: :_actions" \
    "*: :_options"
}

_actions()
{
  _alternative \
    "unprivilaged-actions:unprivilaged actions:_unprivilaged_actions" \
    "privilaged-actions:privilaged actions:_privilaged_actions"
}

_options()
{
 # Array size ${#words}
 local index
 let "index=${#words} - 1"
 if [ "$words[$index]" = "-S" ] || [ "$words[$index]" = "--set" ]; then
   _alternative \
     "privilaged-options:privilaged options:_privilaged_options"
 elif [ "$words[$index]" = "-G" ] || [ "$words[$index]" = "--get" ]; then
   _alternative \
     "unprivilaged-options:unprivilaged options:_unprivilaged_options"
 elif [ "$words[$index]" = "-g" ] || [ "$words[$index]" = "--governor" ]; then
   _alternative \
     ":cpu governor name:"
 elif [ "$words[$index]" = "-m" ] || [ "$words[$index]" = "--max" ]; then
   _alternative \
     ":max freq between 0 and 100:"
 elif [ "$words[$index]" = "-n" ] || [ "$words[$index]" = "--min" ]; then
   _alternative \
     ":min freq between 0 and 100:"
 elif [ "$words[$index]" = "-t" ] || [ "$words[$index]" = "--turbo" ]; then
   _alternative \
     ":turbo boost either on or off:"
 elif [ "$words[$index]" = "-p" ] || [ "$words[$index]" = "--plan" ]; then
   _alternative \
     ":power plan name :"
 else
   _actions
 fi
}

_unprivilaged_options()
{
  # Add long option support
  local options;
  options=(
    "-c:Get the current CPU values"
    "-r:Get real-time CPU frequencies"
  )
  _describe -t unprivilaged-options "unprivilaged options" options "$@"
}

_privilaged_options()
{
  # Add long option support
  local options;
  options=(
    "-p:Set a pre-defined plan"
    "-m:Set the CPU max"
    "-n:Set the CPU min"
    "-t:Set the CPU turbo"
    "-g:Set the CPU governor"
  )
  _describe -t privilaged-options "privilaged options" options "$@"
}


_unprivilaged_actions()
{
  # Add long option support
  local actions;
  actions=(
    "-H:Print the help output"
    "-V:Print the current version"
    "-G:Access the current CPU values"
    "-q:Supress non-error output"
    "-d:Enable debugging mode"
    "--delay:Delay operation for 5 seconds"
  )
  _describe -t unprivilaged-actions "unprivilaged actions" actions "$@"
}

_privilaged_actions()
{
  # Add long option support
  local actions;
  actions=(
    "-S:Modify the current CPU values"
  )
  _describe -t privilaged-actions "privilaged actions" actions "$@"
}

_pstate-frequency "$@"

